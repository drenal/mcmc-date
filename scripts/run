#!/usr/bin/env bash

set -e

source ./analysis.conf

usage() {
    echo "Usage: $(basename "$0") [OPTIONS] COMMANDS"
    echo
    echo "Prior options:"
    echo "-b Activate braces"
    echo "-c Activate calibrations"
    echo "-k Activate constraints"
    echo
    echo "Algorithm options:"
    echo "-H Activate Hamiltonian proposal (slow, but great convergence)"
    echo "-m Use Mc3 algorithm insteahd of Mhg"
    echo
    echo "Other options:"
    echo "-p Activate profiling"
    echo "-s Use stack instead of cabal-install"
    echo
    echo "Available commands:"
    echo "p  Prepare"
    echo "r  Run"
    echo "c  Continue"
    echo "m  Marginal likelihood"
    echo
    echo "A configuration file \"analysis.conf\" is required."
    echo "For reference, see the sample configuration file."
}

braces_activated=0
calibrations_activated=0
constraints_activated=0

hamiltonian_activated=0
mc3_activated=0

profiling_activated=0
use_stack=0

OPTIND=1
while getopts "h?bckHmps" opt; do
    case "$opt" in
        h|\?)
            usage
            exit 0
            ;;
        b)  braces_activated=1
            ;;
        c)  calibrations_activated=1
            ;;
        k)  constraints_activated=1
            ;;
        H)  hamiltonian_activated=1
            ;;
        m)  mc3_activated=1
            ;;
        p)  profiling_activated=1
            ;;
        s)  use_stack=1
            ;;
        *) usage
           exit 1
           ;;
    esac
done
shift $((OPTIND-1))
[ "${1:-}" = "--" ] && shift

# Arguments.
if [[ $# -lt 1 ]]
then
    usage
    exit 1
fi

command=$1
shift

if [[ -z $analysis_name || -z $rooted_tree || -z $trees ]]
then
    usage
    exit 1
else
    echo "Analysis name: ${analysis_name}."
    echo "Rooted tree: ${rooted_tree}."
    echo "Trees: ${trees}."
fi

if [[ $use_stack -eq 0 ]]
then
    echo "Using cabal-install."
    prog_name="cabal"
    prog_cmd="run"
    prog_profiling_flag="--enable-profiling"
    prog_target="exe:mcmc-date"
elif [[ $use_stack -eq 1 ]]
then
    echo "Using Stack."
    prog_name="stack"
    prog_cmd="exec"
    prog_profiling_flag="--profile"
    prog_target="mcmc-date"
else
    echo "Error: use_stack is neither 0 nor 1: ${use_stack}."
    exit 1
fi

outdir="results"
c_flags=()

if [[ $braces_activated -eq 1 ]]
then
    if [[ -z $braces ]]
    then
        echo "Braces activated but brace file not available."
        exit 1
    else
        echo "Braces: ${braces}."
        outdir="${outdir}-braces"
        c_flags+=(--braces "../$braces")
    fi
fi

if [[ $calibrations_activated -eq 1 ]]
then
    if [[ -z $calibrations ]]
    then
        echo "Calibrations activated but calibration file not available."
        exit 1
    else
        echo "Calibrations: ${calibrations}."
        outdir="${outdir}-calibrations"
        c_flags+=(--calibrations "../$calibrations")
    fi
fi

if [[ $constraints_activated -eq 1 ]]
then
    if [[ -z $constraints ]]
    then
        echo "Constraints activated but constraint file not available."
        exit 1
    else
        echo "Constraints: ${constraints}."
        outdir="${outdir}-constraints"
        c_flags+=(--constraints "../$constraints")
    fi
fi

if [[ $hamiltonian_activated -eq 1 ]]
then
    echo "Hamiltonian proposal activated."
    c_flags+=(--hamiltonian)
fi

if [[ $mc3_activated -eq 1 ]]
then
    echo "Mc3 algorithm activated."
    c_flags+=(--mc3)
fi

p_flags=()
p_flags_prog=()
p_flags_rts=()
if [[ $profiling_activated -eq 1 ]]
then
    p_flags+=("${prog_profiling_flag}")
    p_flags_prog+=(--profile)
    p_flags_rts+=(-p)
    outdir="${outdir}-profile"
fi

echo "Results directory: ${outdir}."
mkdir -p $outdir; cd $outdir

if [[ "$command" == "p" ]]
then
    prepare_flags=()
    OPTIND=1
    while getopts "s" opt; do
        case "$opt" in
            s)  prepare_flags+=(--sparse)
                ;;
            *) usage
               exit 1
               ;;
        esac
    done
    shift $((OPTIND-1))
    [ "${1:-}" = "--" ] && shift
    ${prog_name} ${prog_cmd} "${p_flags[@]}" -- ${prog_target} prepare \
          --analysis-name "$analysis_name" --rooted-tree "../$rooted_tree" --trees "../$trees" \
          "${prepare_flags[@]}" \
          | tee prepare.log
elif [[ "$command" == "r" ]]
then
    ${prog_name} ${prog_cmd} "${p_flags[@]}" -- ${prog_target} run \
          --analysis-name "$analysis_name" "${c_flags[@]}" "${p_flags_prog[@]}" \
           +RTS -N5 "${p_flags_rts[@]}"
elif [[ "$command" == "c" ]]
then
    ${prog_name} ${prog_cmd} "${p_flags[@]}" -- ${prog_target} continue \
          --analysis-name "$analysis_name" "${c_flags[@]}" "${p_flags_prog[@]}" \
          +RTS -N5 "${p_flags_rts[@]}"
elif [[ "$command" == "m" ]]
then
    ${prog_name} ${prog_cmd} "${p_flags[@]}" -- ${prog_target} marginal-likelihood \
          --aanalysis-name "$analysis_name" "${c_flags[@]}" "${p_flags_prog[@]}" \
          +RTS -N5 "${p_flags_rts[@]}"
else
    usage
    exit 1
fi
