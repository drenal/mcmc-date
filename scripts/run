#!/usr/bin/env bash

set -e

source analysis.conf

usage() {
    echo "Usage: $(basename "$0") [OPTIONS] COMMANDS"
    echo
    echo "Available options:"
    echo "-c Activate calibrations"
    echo "-k Activate constraints"
    echo "-p Activate profiling"
    echo
    echo "Available commands:"
    echo "p  Prepare"
    echo "r  Run"
    echo "c  Continue"
    echo "m  Marginal likelihood"
    echo
    echo "A configuration file \"analysis.conf\" specifying the following variables is expected."
    echo "For reference, see the sample configuration file."
}

calibrations_activated=0
constraints_activated=0
profiling_activated=0
OPTIND=1
while getopts "h?ckp" opt; do
    case "$opt" in
        h|\?)
            usage
            exit 0
            ;;
        c)  calibrations_activated=1
            ;;
        k)  constraints_activated=1
            ;;
        p)  profiling_activated=1
            ;;
    esac
done
shift $((OPTIND-1))
[ "${1:-}" = "--" ] && shift

# Arguments.
if [[ $# -lt 1 ]]
then
    usage
    exit 1
fi

command=$1

if [[ -z $analysis_name || -z $rooted_tree || -z $trees ]]
then
    usage
    exit 1
else
    echo "Analysis name: ${analysis_name}."
    echo "Rooted tree: ${rooted_tree}."
    echo "Trees: ${trees}."
fi

outdir="results"
c_flags=()
if [[ $calibrations_activated -eq 1 ]]
then
    if [[ -z $calibrations ]]
    then
        echo "Calibrations activated but calibration file not available."
        exit 1
    else
        echo "Calibrations: ${calibrations}."
        outdir="${outdir}-calibrations"
        c_flags+=(-c "../$calibrations")
    fi
fi

if [[ $constraints_activated -eq 1 ]]
then
    if [[ -z $constraints ]]
    then
        echo "Constraints activated but constraint file not available."
        exit 1
    else
        echo "Constraints: ${constraints}."
        outdir="${outdir}-constraints"
        c_flags+=(-k "../$constraints")
    fi
fi

p_flags_stack=()
p_flags_prog=()
if [[ $profiling_activated -eq 1 ]]
then
    p_flags_stack+=(--profile)
    p_flags_prog+=(-p)
    outdir="${outdir}-profile"
fi

echo "Results directory: ${outdir}."
mkdir -p $outdir; cd $outdir

if [[ "$command" == "p" ]]
then
    stack exec "${p_flags_stack[@]}" -- mcmc-date prepare \
          -a "$analysis_name" -t "../$rooted_tree" -d "../$trees"
elif [[ "$command" == "r" ]]
then
    stack exec "${p_flags_stack[@]}" -- mcmc-date run \
           -a "$analysis_name" "${c_flags[@]}" \
           +RTS -N5 "${p_flags_prog[@]}"
elif [[ "$command" == "c" ]]
then
    stack exec "${p_flags_stack[@]}" -- mcmc-date continue \
          -a "$analysis_name" "${c_flags[@]}" \
          +RTS -N5 "${p_flags_prog[@]}"
elif [[ "$command" == "m" ]]
then
    stack exec "${p_flags_stack[@]}" -- mcmc-date marginal-likelihood \
          -a "$analysis_name" "${c_flags[@]}" \
          +RTS -N5 "${p_flags_prog[@]}"
else
    usage
    exit 1
fi
