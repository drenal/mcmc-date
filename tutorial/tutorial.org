#+options: ':t *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:nil p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+title: Dating with constraints
#+subtitle: A tutorial on McmcDate
#+date: January 13, 2023
#+author: Dominik Schrempf
#+email: dominik.schrempf@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.2 (Org mode 9.6)

#+latex_class: myArticle
#+latex_class_options: [minted,svg]
#+latex_header:
#+latex_header_extra:
#+description:
#+keywords:
#+subtitle:
#+latex_engraved_theme:
#+latex_compiler: unused; see `org-latex-pdf-process'

#+bibliography: ~/Evolutionary-Biology/Bibliography/bibliography.bib
#+cite_export: biblatex

#+latex: \begin{abstract}
[[https://github.com/dschrempf/mcmc-date][McmcDate]] can date a phylogenetic tree with constraints. That is, it can estimate
the ages of the ancestral nodes of a phylogenetic tree with node age
calibrations, node order constraints, and node braces. McmcDate is fast because
it approximates the phylogenetic likelihood with a multivariate normal
distribution.

In this tutorial, we are going to date a phylogenetic tree of eukaryotes. We are
going to use node age calibrations from fossils, and node order constraints from
two possible successions of plastid endosymbiosis events.
#+latex: \end{abstract}

#+begin_center
*This tutorial is a work in progress.*
#+end_center

* Definitions and explanations
We use the term /(rooted) tree/ to denote a directed acyclic graph with node
labels and branch lengths, and in which not more than one branch connects any
two nodes. Usually, nodes correspond to (ancestral) species, and branch lengths
to sequence distance or time. We use the term /(rooted) topology/ to denote a
(rooted) tree without information about branch lengths. We put the word /rooted/
into parentheses, because it is sometimes omited. The root of the tree or
topology is the only node with all branches pointing away to other nodes, and is
the oldest node. Leaves are extant nodes with a single branch pointing towards
them.

For a given topology, /dating the tree/[fn:1] corresponds to finding branch
lengths for this topology which are measured in real time (for example, in
Million years), and which describe the data in the /best/ way. /Best/ can mean
different things, and we will carefully analyze what /best/ means in our case.

Similarly, we use the term /unrooted tree/ to denote an undirected acyclic graph
with node labels and branch lengths, and in which not more than one branch
connects any two nodes. Finally, we use the term /unrooted topology/ to denote
an unrooted tree without information about branch lengths. We need unrooted
trees and topologies because we will use reversible substitution models [cite:
for a review, see @Yang2006] to infer unrooted trees with branch lengths
measured in expected number of substitutions per unit time. Reversible
substitution models are unable to discriminate between the two directions in
time.

* Dating a tree
The pipeline for dating a topology is:
1. Prepare a multi sequence alignment and an unrooted topology.
2. For this alignment and unrooted topology, infer a distribution of unrooted
   trees with branch lengths measured in expected number of substitutions per
   unit time.
3. Find a rooted topology to date. Prepare auxiliary data such as node age
   calibrations or node order constraints.
4. Date the topology with McmcDate. In particular, infer a distribution of
   rooted trees with branch lengths measured in real time.
The following sections describe the steps of the pipeline in detail.

* Step 1: Alignment and unrooted topology
We are going to date a topology of eukaryotes [cite:@Strassert2021]. The full
published data set contains three alignments:
1. The alignment with the highest number of taxa comprises 733 eukaryotes with
   62723 amino acids.
2. The authors used the first alignment to infer a tree with IQ-TREE
   [cite:@Minh2020a] so they can filter taxa in an informed way (for example,
   keep slow evolving taxa). The reduced data set comprises 136 operational
   taxonomic units with 73460 amino acids.
3. A small data set with 63 operational taxonomic units and 73460 amino acids
   for tree inference with Bayesian models.
Here, we focus on the second alignment with 136 taxa. We use shorter taxon names
and I have converted the file from FASTA format to Phylip format which is
required by Phylobayes [cite:@Lartillot2013]. I provide the alignment
=strassert-136taxa.phy= in the [[https://github.com/dschrempf/mcmc-date/tree/master/tutorial/data][data subfolder]] of this tutorial:

#+name: step1-alignment
#+begin_src sh :exports results :results verbatim code replace output
ls data/*.phy
#+end_src

#+results: step1-alignment
#+begin_src sh
data/strassert-136taxa.phy
#+end_src

\noindent For the phylogenetic inference in the next step, we also need an
unrooted topology. I have unrooted the tree in Figure 3 in
[cite/text:@Strassert2021]. Similar to the alignment, I provide the unrooted
topology in the [[https://github.com/dschrempf/mcmc-date/tree/master/tutorial/data][data subfolder]] of this tutorial:

#+name: step1-unrooted-topology
#+begin_src sh :exports results :results verbatim code replace output
ls data/*unrooted*
#+end_src

#+results: step1-unrooted-topology
#+begin_src sh
data/strassert-136taxa.unrooted.tre
#+end_src

\noindent Please also see the [[https://github.com/dschrempf/mcmc-date/blob/master/tutorial/data/README.md][README in the data subfolder]].

* Step 2: Phylogenetic inference
- Use Phylobayes [cite:@Lartillot2013].
- Decide on evolutionary model depending on the size of the data set and the
  computational requirements. Recommended models from preferred but slow and
  complex to fast and simple: GTR+CAT+G4, LG+CAT+G4, LG+EDM64+G4, LG+C60+G4,
  LG+G4.

We specify an evolutionary model with exchangeabilities EX, and across-site
compositional heterogeneity model ASCH as =EX+ASCH=. All discussed evolutionary
models used for simulations as well as inferences implicitly use discrete gamma
rate heterogeneity with four components.

- GTR model [cite:@Tavare1986].
- CAT model [cite:@Lartillot2004].
- Gamma rate variation model [cite:@Yang1993].
- LG model [cite:@Le2008a].
- EDM model [cite:@Schrempf2020a].
- C60 model [cite:@Quang2008]

* Step 3: Rooted topology and auxiliary data
[cite/text:@Strassert2021] discuss one unrooted topology with two possible root
positions. (1) The root separates amorphea from diaphoretickes and excavates
[cite: Figure 3 in @Strassert2021], and (2) the root separates amorphea and
excavates from diaphoretickes. Here, we choose option (1) which is the more
plausible one.


- Node order calibrations [cite:@Yang2005].
- Relative node order constraints [cite:@Szollosi2022].
- McmcDate can also brace nodes (Appendix
  [[id:202fc129-8d65-4966-a217-322231ff9c49]]).

* Step 4: Dating with McmcDate
- McmcDate is a Haskell program (Appendix
  [[id:a38b78be-7ee6-4340-946a-2a5d06385b66]]).

\appendix

* Node braces
:PROPERTIES:
:ID:       202fc129-8d65-4966-a217-322231ff9c49
:END:

* Internals of McmcDate
:PROPERTIES:
:ID:       a38b78be-7ee6-4340-946a-2a5d06385b66
:END:
McmcDate is a Haskell program.

Recommend cabal, but there is also stack (-s) option.

The [[https://github.com/dschrempf/mcmc-date/blob/master/scripts/run][wrapper script]] used in this tutorial tries to make a good compromise between
usability and customizability. It exposes some, but not all functionality of
McmcDate. Most notably,

- Based on [[https://hackage.haskell.org/package/mcmc][mcmc]].
- Based on [[https://hackage.haskell.org/package/elynx-tree][elynx-tree]].
- Explain code a bit (I guess mostly proposals).

** Haskell modules
Modules containing definitions specific to the analysis are in the [[https://github.com/dschrempf/mcmc-date/tree/master/app][=app=
subfolder]] of the McmcDate repository.

*** More important modules
- Definitions :: Proposals and monitors, configuration.
- State :: State space. If you try to understand what is going on, or if you
  want to change analysis settings, this should be your starting point.

*** Other modules
- Hamiltonian :: Hamiltonian proposal.
- Main :: Functions to prepare the data, run and continue the
  Metropolis-Hasting-Green algorithm.
- Monitor :: Prior specific monitoring functions.
- Options :: Handle command line options.
- Probability :: Prior and likelihood functions.
- Tools :: Miscellaneous tools.

* References :ignore:
#+print_bibliography:

* Footnotes

[fn:1] We should probably say /dating the topology/ but this phrase is not used.
